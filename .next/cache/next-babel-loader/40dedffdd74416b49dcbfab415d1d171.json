{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gusta\\\\Documents\\\\Coding Bootcamp by MIT\\\\Module 29 - Full-Stack Restaurant App Part 2\\\\full-stack-restaurant-app_starter\\\\pages\\\\[restaurantId].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport React, { useState, useCallback } from 'react';\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache, gql, useQuery } from '@apollo/client';\nimport RestaurantList from '../components/restaurantList';\nimport { InputGroup, InputGroupAddon, Input } from 'reactstrap';\nimport Dishes from '../components/dishes';\n\nfunction Restaurant() {\n  _s();\n\n  var router = useRouter();\n  var API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:1337';\n  console.log(\"URL: \".concat(API_URL));\n\n  var _useState = useState(''),\n      query = _useState[0],\n      setQuery = _useState[1];\n\n  var link = new HttpLink({\n    uri: \"\".concat(API_URL, \"/graphql\")\n  });\n  var cache = new InMemoryCache();\n  var client = new ApolloClient({\n    link: link,\n    cache: cache\n  });\n\n  var _useState2 = useState({}),\n      restaurant = _useState2[0],\n      setRestaurant = _useState2[1];\n\n  var handleSetRestaurant = function handleSetRestaurant(restaurantData) {\n    setRestaurant(restaurantData);\n  };\n\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \" \", restaurant.name), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, restaurant.description), __jsx(InputGroup, {\n    className: \"py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \" Search \"), __jsx(Input, {\n    onChange: function onChange(e) {\n      return setQuery(e.target.value.toLocaleLowerCase());\n    },\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), __jsx(Dishes, {\n    restId: router.query.restaurantId,\n    handleSetRestaurant: handleSetRestaurant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  })) // <p>Post: {router.query.restaurantId}</p>\n  ;\n}\n\n_s(Restaurant, \"hIWuoqgVgGuzJNmwI4QtaixHFoM=\", false, function () {\n  return [useRouter];\n});\n\n_c = Restaurant;\nexport default Restaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurant\");","map":{"version":3,"sources":["C:/Users/gusta/Documents/Coding Bootcamp by MIT/Module 29 - Full-Stack Restaurant App Part 2/full-stack-restaurant-app_starter/pages/[restaurantId].js"],"names":["useRouter","React","useState","useCallback","ApolloProvider","ApolloClient","HttpLink","InMemoryCache","gql","useQuery","RestaurantList","InputGroup","InputGroupAddon","Input","Dishes","Restaurant","router","API_URL","process","env","NEXT_PUBLIC_API_URL","console","log","query","setQuery","link","uri","cache","client","restaurant","setRestaurant","handleSetRestaurant","restaurantData","name","description","e","target","value","toLocaleLowerCase","restaurantId"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,QAHF,EAIEC,aAJF,EAKEC,GALF,EAMEC,QANF,QAOO,gBAPP;AAQA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,KAAtC,QAAmD,YAAnD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,MAAMC,MAAM,GAAGhB,SAAS,EAAxB;AACA,MAAMiB,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AACAC,EAAAA,OAAO,CAACC,GAAR,gBAAoBL,OAApB;;AAHoB,kBAIMf,QAAQ,CAAC,EAAD,CAJd;AAAA,MAIbqB,KAJa;AAAA,MAINC,QAJM;;AAKpB,MAAMC,IAAI,GAAG,IAAInB,QAAJ,CAAa;AAAEoB,IAAAA,GAAG,YAAKT,OAAL;AAAL,GAAb,CAAb;AACA,MAAMU,KAAK,GAAG,IAAIpB,aAAJ,EAAd;AACA,MAAMqB,MAAM,GAAG,IAAIvB,YAAJ,CAAiB;AAAEoB,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,KAAK,EAALA;AAAR,GAAjB,CAAf;;AAPoB,mBAQgBzB,QAAQ,CAAC,EAAD,CARxB;AAAA,MAQb2B,UARa;AAAA,MAQDC,aARC;;AAUpB,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,cAAD,EAAoB;AAC9CF,IAAAA,aAAa,CAACE,cAAD,CAAb;AACD,GAFD;;AAIA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEJ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuBC,UAAU,CAACI,IAAlC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,UAAU,CAACK,WAAjB,CAFF,EAGE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,KAAD;AACE,IAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,aAAOX,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,iBAAf,EAAD,CAAf;AAAA,KADZ;AAEE,IAAA,KAAK,EAAEf,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,EAaE,MAAC,MAAD;AACE,IAAA,MAAM,EAAEP,MAAM,CAACO,KAAP,CAAagB,YADvB;AAEE,IAAA,mBAAmB,EAAER,mBAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CAoBE;AApBF;AAsBD;;GApCQhB,U;UACQf,S;;;KADRe,U;AAsCT,eAAeA,UAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport React, { useState, useCallback } from 'react';\r\nimport {\r\n  ApolloProvider,\r\n  ApolloClient,\r\n  HttpLink,\r\n  InMemoryCache,\r\n  gql,\r\n  useQuery,\r\n} from '@apollo/client';\r\nimport RestaurantList from '../components/restaurantList';\r\nimport { InputGroup, InputGroupAddon, Input } from 'reactstrap';\r\nimport Dishes from '../components/dishes';\r\n\r\nfunction Restaurant() {\r\n  const router = useRouter();\r\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:1337';\r\n  console.log(`URL: ${API_URL}`);\r\n  const [query, setQuery] = useState('');\r\n  const link = new HttpLink({ uri: `${API_URL}/graphql` });\r\n  const cache = new InMemoryCache();\r\n  const client = new ApolloClient({ link, cache });\r\n  const [restaurant, setRestaurant] = useState({});\r\n\r\n  const handleSetRestaurant = (restaurantData) => {\r\n    setRestaurant(restaurantData);\r\n  };\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <div className=\"search\">\r\n        <h2 className=\"py-3\"> {restaurant.name}</h2>\r\n        <div>{restaurant.description}</div>\r\n        <InputGroup className=\"py-3\">\r\n          <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\r\n          <Input\r\n            onChange={(e) => setQuery(e.target.value.toLocaleLowerCase())}\r\n            value={query}\r\n          />\r\n        </InputGroup>\r\n        <br></br>\r\n      </div>\r\n      <Dishes\r\n        restId={router.query.restaurantId}\r\n        handleSetRestaurant={handleSetRestaurant}\r\n      >\r\n      </Dishes>\r\n    </ApolloProvider>\r\n    // <p>Post: {router.query.restaurantId}</p>\r\n  );\r\n}\r\n\r\nexport default Restaurant;\r\n"]},"metadata":{},"sourceType":"module"}