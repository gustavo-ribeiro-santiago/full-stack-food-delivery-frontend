{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gusta\\\\Documents\\\\Coding Bootcamp by MIT\\\\Module 29 - Full-Stack Restaurant App Part 2\\\\full-stack-restaurant-app_starter\\\\components\\\\dishes.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query ($id: ID!) {\\n      restaurant(id: $id) {\\n        id\\n        name\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n          image {\\n            url\\n          }\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from 'next/router';\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext, useEffect } from 'react';\nimport AppContext from './context';\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from 'reactstrap';\n\nfunction Dishes(_ref) {\n  _s2();\n\n  var _this = this,\n      _s = $RefreshSig$();\n\n  var restId = _ref.restId,\n      setRestaurant = _ref.setRestaurant;\n\n  var _useState = useState(),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var GET_RESTAURANT_DISHES = gql(_templateObject());\n  var router = useRouter();\n  useEffect(_s(function () {\n    _s();\n\n    var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n      variables: {\n        id: restId\n      }\n    }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n    if (loading) return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, \"Loading...\");\n    if (error) return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }\n    }, \"ERROR here\");\n    if (!data) return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 23\n      }\n    }, \"Not found\");\n    console.log(data);\n    setRestaurant(data.restaurant);\n  }, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  }), []);\n  var restaurant = data.restaurant;\n\n  if (restId > 0) {\n    return __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, restaurant.dishes.map(function (res) {\n      var _jsx;\n\n      return __jsx(\"div\", {\n        style: {\n          padding: 0\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, __jsx(Card, {\n        style: {\n          width: 300,\n          height: 561,\n          margin: '0 10px 30px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 300,\n          width: 300\n        },\n        src: \"http://localhost:1337\".concat(res.image.url),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }, __jsx(CardTitle, {\n        className: \"font-weight-bold\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, res.name), __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }, __jsx(\"div\", {\n        style: {\n          paddingLeft: 15,\n          paddingTop: 8,\n          fontWeight: 'bold'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, \"$\", res.price), __jsx(Button, (_jsx = {\n        color: \"info\",\n        outline: true\n      }, _defineProperty(_jsx, \"color\", \"dark\"), _defineProperty(_jsx, \"onClick\", function onClick() {\n        return addItem(res);\n      }), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }), _jsx), \"+ Add To Cart\"))));\n    }));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 12\n      }\n    }, \" No Dishes\");\n  }\n}\n\n_s2(Dishes, \"Nc/BlP1DiO9QZBphThjgsTP8JAs=\", false, function () {\n  return [useRouter];\n});\n\n_c = Dishes;\nexport default Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["C:/Users/gusta/Documents/Coding Bootcamp by MIT/Module 29 - Full-Stack Restaurant App Part 2/full-stack-restaurant-app_starter/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","useEffect","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","setRestaurant","restaurantID","setRestaurantID","addItem","GET_RESTAURANT_DISHES","router","variables","id","loading","error","data","console","log","restaurant","display","flexWrap","justifyContent","dishes","map","res","padding","width","height","margin","image","url","name","description","paddingLeft","paddingTop","fontWeight","price"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,OAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,GAPF,EAQEC,GARF,QASO,YATP;;AAUA,SAASC,MAAT,OAA2C;AAAA;;AAAA;AAAA;;AAAA,MAAzBC,MAAyB,QAAzBA,MAAyB;AAAA,MAAjBC,aAAiB,QAAjBA,aAAiB;;AAAA,kBACDd,QAAQ,EADP;AAAA,MAClCe,YADkC;AAAA,MACpBC,eADoB;;AAAA,oBAErBf,UAAU,CAACE,UAAD,CAFW;AAAA,MAEjCc,OAFiC,eAEjCA,OAFiC;;AAIzC,MAAMC,qBAAqB,GAAGpB,GAAH,mBAA3B;AAkBA,MAAMqB,MAAM,GAAGtB,SAAS,EAAxB;AAEAK,EAAAA,SAAS,IAAC,YAAM;AAAA;;AAAA,oBACmBH,QAAQ,CAACmB,qBAAD,EAAwB;AAC/DE,MAAAA,SAAS,EAAE;AAAEC,QAAAA,EAAE,EAAER;AAAN;AADoD,KAAxB,CAD3B;AAAA,QACNS,OADM,aACNA,OADM;AAAA,QACGC,KADH,aACGA,KADH;AAAA,QACUC,IADV,aACUA,IADV;;AAKd,QAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACX,QAAI,CAACC,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAV,IAAAA,aAAa,CAACU,IAAI,CAACG,UAAN,CAAb;AACD,GAVQ;AAAA,YAC0B5B,QAD1B;AAAA,MAUJ,EAVI,CAAT;AAYA,MAAI4B,UAAU,GAAGH,IAAI,CAACG,UAAtB;;AAEA,MAAId,MAAM,GAAG,CAAb,EAAgB;AACd,WACE;AACE,MAAA,KAAK,EAAE;AACLe,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,QAAQ,EAAE,MAFL;AAGLC,QAAAA,cAAc,EAAE;AAHX,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGH,UAAU,CAACI,MAAX,CAAkBC,GAAlB,CAAsB,UAACC,GAAD;AAAA;;AAAA,aACrB;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE,GAAtB;AAA2BC,UAAAA,MAAM,EAAE;AAAnC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AACE,QAAA,GAAG,EAAE,IADP;AAEE,QAAA,KAAK,EAAE;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAeD,UAAAA,KAAK,EAAE;AAAtB,SAFT;AAGE,QAAA,GAAG,iCAA0BF,GAAG,CAACK,KAAJ,CAAUC,GAApC,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCN,GAAG,CAACO,IAA7C,CADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWP,GAAG,CAACQ,WAAf,CAFF,CANF,EAUE;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,KAAK,EAAE;AAAEb,UAAAA,OAAO,EAAE,MAAX;AAAmBE,UAAAA,cAAc,EAAE;AAAnC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AACE,QAAA,KAAK,EAAE;AAAEY,UAAAA,WAAW,EAAE,EAAf;AAAmBC,UAAAA,UAAU,EAAE,CAA/B;AAAkCC,UAAAA,UAAU,EAAE;AAA9C,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAGIX,GAAG,CAACY,KAHR,CAJF,EASE,MAAC,MAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,OAAO;AAFT,wCAGQ,MAHR,oCAIW;AAAA,eAAM5B,OAAO,CAACgB,GAAD,CAAb;AAAA,OAJX;AAAA;AAAA;AAAA;AAAA,iCATF,CAVF,CADF,CADqB;AAAA,KAAtB,CAPH,CADF;AA2CD,GA5CD,MA4CO;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AACF;;IArFQrB,M;UAsBQf,S;;;KAtBRe,M;AAsFT,eAAeA,MAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext, useEffect } from 'react';\nimport AppContext from './context';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n} from 'reactstrap';\nfunction Dishes({ restId, setRestaurant }) {\n  const [restaurantID, setRestaurantID] = useState();\n  const { addItem } = useContext(AppContext);\n\n  const GET_RESTAURANT_DISHES = gql`\n    query ($id: ID!) {\n      restaurant(id: $id) {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n          image {\n            url\n          }\n        }\n      }\n    }\n  `;\n\n  const router = useRouter();\n\n  useEffect(() => {\n    const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n      variables: { id: restId },\n    });\n    \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>ERROR here</p>;\n    if (!data) return <p>Not found</p>;\n    console.log(data);\n    setRestaurant(data.restaurant);\n  },   []);\n\n  let restaurant = data.restaurant;\n\n  if (restId > 0) {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'space-between',\n        }}\n      >\n        {restaurant.dishes.map((res) => (\n          <div style={{ padding: 0 }}>\n            <Card style={{ width: 300, height: 561, margin: '0 10px 30px' }}>\n              <CardImg\n                top={true}\n                style={{ height: 300, width: 300 }}\n                src={`http://localhost:1337${res.image.url}`}\n              />\n              <CardBody>\n                <CardTitle className=\"font-weight-bold\">{res.name}</CardTitle>\n                <CardText>{res.description}</CardText>\n              </CardBody>\n              <div\n                className=\"card-footer\"\n                style={{ display: 'flex', justifyContent: 'space-between' }}\n              >\n                <div\n                  style={{ paddingLeft: 15, paddingTop: 8, fontWeight: 'bold' }}\n                >\n                  ${res.price}\n                </div>\n                <Button\n                  color=\"info\"\n                  outline\n                  color=\"dark\"\n                  onClick={() => addItem(res)}\n                >\n                  + Add To Cart\n                </Button>\n              </div>\n            </Card>\n          </div>\n        ))}\n      </div>\n    );\n  } else {\n    return <h1> No Dishes</h1>;\n  }\n}\nexport default Dishes;\n"]},"metadata":{},"sourceType":"module"}