{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gusta\\\\Documents\\\\Coding Bootcamp by MIT\\\\Module 29 - Full-Stack Restaurant App Part 2\\\\full-stack-restaurant-app_starter\\\\pages\\\\[restaurantId].js\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport React, { useState } from 'react';\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache, gql, useQuery } from '@apollo/client';\nimport RestaurantList from '../components/restaurantList';\nimport { InputGroup, InputGroupAddon, Input } from 'reactstrap';\nimport Dishes from '../components/dishes';\n\nfunction Restaurant() {\n  const router = useRouter();\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:1337';\n  console.log(`URL: ${API_URL}`);\n  const {\n    0: query,\n    1: setQuery\n  } = useState('');\n  const link = new HttpLink({\n    uri: `${API_URL}/graphql`\n  });\n  const cache = new InMemoryCache();\n  const client = new ApolloClient({\n    link,\n    cache\n  });\n  const {\n    0: restaurant,\n    1: setRestaurant\n  } = useState({});\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \" \", restaurant.name), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, restaurant.description), __jsx(InputGroup, {\n    className: \"py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \" Search \"), __jsx(Input, {\n    onChange: e => setQuery(e.target.value.toLocaleLowerCase()),\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), __jsx(Dishes, {\n    restId: router.query.restaurantId,\n    setRestaurant: setRestaurant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \" \")) // <p>Post: {router.query.restaurantId}</p>\n  ;\n}\n\nexport default Restaurant;","map":{"version":3,"sources":["C:/Users/gusta/Documents/Coding Bootcamp by MIT/Module 29 - Full-Stack Restaurant App Part 2/full-stack-restaurant-app_starter/pages/[restaurantId].js"],"names":["useRouter","React","useState","ApolloProvider","ApolloClient","HttpLink","InMemoryCache","gql","useQuery","RestaurantList","InputGroup","InputGroupAddon","Input","Dishes","Restaurant","router","API_URL","process","env","NEXT_PUBLIC_API_URL","console","log","query","setQuery","link","uri","cache","client","restaurant","setRestaurant","name","description","e","target","value","toLocaleLowerCase","restaurantId"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,cADF,EAEEC,YAFF,EAGEC,QAHF,EAIEC,aAJF,EAKEC,GALF,EAMEC,QANF,QAOO,gBAPP;AAQA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,KAAtC,QAAmD,YAAnD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAMC,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAMgB,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,QAAOL,OAAQ,EAA5B;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMsB,IAAI,GAAG,IAAInB,QAAJ,CAAa;AAAEoB,IAAAA,GAAG,EAAG,GAAET,OAAQ;AAAlB,GAAb,CAAb;AACA,QAAMU,KAAK,GAAG,IAAIpB,aAAJ,EAAd;AACA,QAAMqB,MAAM,GAAG,IAAIvB,YAAJ,CAAiB;AAAEoB,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAjB,CAAf;AACA,QAAM;AAAA,OAACE,UAAD;AAAA,OAAaC;AAAb,MAA8B3B,QAAQ,CAAC,EAAD,CAA5C;AAEA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEyB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuBC,UAAU,CAACE,IAAlC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,UAAU,CAACG,WAAjB,CAFF,EAGE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,KAAD;AACE,IAAA,QAAQ,EAAGC,CAAD,IAAOT,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,iBAAf,EAAD,CAD3B;AAEE,IAAA,KAAK,EAAEb,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,EAaE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEP,MAAM,CAACO,KAAP,CAAac,YAA7B;AAA2C,IAAA,aAAa,EAAEP,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAbF,CADF,CAgBE;AAhBF;AAkBD;;AAED,eAAef,UAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport React, { useState } from 'react';\r\nimport {\r\n  ApolloProvider,\r\n  ApolloClient,\r\n  HttpLink,\r\n  InMemoryCache,\r\n  gql,\r\n  useQuery,\r\n} from '@apollo/client';\r\nimport RestaurantList from '../components/restaurantList';\r\nimport { InputGroup, InputGroupAddon, Input } from 'reactstrap';\r\nimport Dishes from '../components/dishes';\r\n\r\nfunction Restaurant() {\r\n  const router = useRouter();\r\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:1337';\r\n  console.log(`URL: ${API_URL}`);\r\n  const [query, setQuery] = useState('');\r\n  const link = new HttpLink({ uri: `${API_URL}/graphql` });\r\n  const cache = new InMemoryCache();\r\n  const client = new ApolloClient({ link, cache });\r\n  const [restaurant, setRestaurant] = useState({})\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <div className=\"search\">\r\n        <h2 className=\"py-3\"> {restaurant.name}</h2>\r\n        <div>{restaurant.description}</div>\r\n        <InputGroup className=\"py-3\">\r\n          <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\r\n          <Input\r\n            onChange={(e) => setQuery(e.target.value.toLocaleLowerCase())}\r\n            value={query}\r\n          />\r\n        </InputGroup>\r\n        <br></br>\r\n      </div>\r\n      <Dishes restId={router.query.restaurantId} setRestaurant={setRestaurant}> </Dishes>\r\n    </ApolloProvider>\r\n    // <p>Post: {router.query.restaurantId}</p>\r\n  );\r\n}\r\n\r\nexport default Restaurant;\r\n"]},"metadata":{},"sourceType":"module"}