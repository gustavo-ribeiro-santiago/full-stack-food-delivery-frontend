{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gusta\\\\Documents\\\\Coding Bootcamp by MIT\\\\Module 29 - Full-Stack Restaurant App Part 2\\\\full-stack-restaurant-app_starter\\\\components\\\\RestaurantPage.js\";\nvar __jsx = React.createElement;\nimport Dishes from '../components/dishes';\nimport { InputGroup, InputGroupAddon, Input } from 'reactstrap';\nimport React, { useState, useCallback } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport Link from 'next/link';\n\nfunction RestaurantPage({\n  restId\n}) {\n  const {\n    0: query,\n    1: setQuery\n  } = useState('');\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n  const GET_RESTAURANT_DATA = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      data {\n        id\n        attributes {\n          name\n          description\n          image {\n            data {\n              attributes {\n                url\n              }\n            }\n          }\n          dishes {\n            data {\n              id\n              attributes {\n                name\n                description\n                price\n                image {\n                  data {\n                    attributes {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DATA, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(JSON.stringify(data));\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"search m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex\",\n    style: {\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: API_URL + data.restaurant.data.attributes.image.data.attributes.url,\n    style: {\n      height: 50,\n      width: 50,\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"mx-3 my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    className: \"py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \" \", data.restaurant.data.attributes.name))), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    style: {\n      color: 'black',\n      fontSize: 35,\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(\"i\", {\n    className: \"bi-arrow-left-circle text-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, data.restaurant.description), __jsx(InputGroup, {\n    className: \"pt-3 pb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(InputGroupAddon, {\n    addonType: \"append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \" Search \"), __jsx(Input, {\n    onChange: e => setQuery(e.target.value.toLocaleLowerCase()),\n    value: query,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })), __jsx(Dishes, {\n    dishes: data.restaurant.dishes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default RestaurantPage;","map":{"version":3,"sources":["C:/Users/gusta/Documents/Coding Bootcamp by MIT/Module 29 - Full-Stack Restaurant App Part 2/full-stack-restaurant-app_starter/components/RestaurantPage.js"],"names":["Dishes","InputGroup","InputGroupAddon","Input","React","useState","useCallback","gql","useQuery","Link","RestaurantPage","restId","query","setQuery","API_URL","process","env","NEXT_PUBLIC_API_URL","GET_RESTAURANT_DATA","loading","error","data","variables","id","console","log","JSON","stringify","justifyContent","restaurant","attributes","image","url","height","width","marginTop","name","color","fontSize","description","e","target","value","toLocaleLowerCase","dishes"],"mappings":"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","sourcesContent":["import Dishes from '../components/dishes';\r\nimport { InputGroup, InputGroupAddon, Input } from 'reactstrap';\r\nimport React, { useState, useCallback } from 'react';\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport Link from 'next/link';\r\n\r\nfunction RestaurantPage({ restId }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\r\n\r\n  const GET_RESTAURANT_DATA = gql`\r\n  query($id: ID!) {\r\n    restaurant(id: $id) {\r\n      data {\r\n        id\r\n        attributes {\r\n          name\r\n          description\r\n          image {\r\n            data {\r\n              attributes {\r\n                url\r\n              }\r\n            }\r\n          }\r\n          dishes {\r\n            data {\r\n              id\r\n              attributes {\r\n                name\r\n                description\r\n                price\r\n                image {\r\n                  data {\r\n                    attributes {\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `;\r\n\r\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DATA, {\r\n    variables: { id: restId },\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>ERROR here</p>;\r\n  if (!data) return <p>Not found</p>;\r\n\r\n  console.log(JSON.stringify(data))\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search m-3\">\r\n        <div className=\"d-flex\" style={{ justifyContent: 'space-between' }}>\r\n          <div className=\"d-flex\">\r\n            <img\r\n              src={API_URL + data.restaurant.data.attributes.image.data.attributes.url}\r\n              style={{ height: 50, width: 50, marginTop: 20 }}\r\n            ></img>\r\n            <div className=\"mx-3 my-2\">\r\n              <h2 className=\"py-3\"> {data.restaurant.data.attributes.name}</h2>\r\n            </div>\r\n          </div>\r\n          <Link href=\"/\">\r\n            <a style={{ color: 'black', fontSize: 35, marginTop: 20 }}>\r\n              <i className=\"bi-arrow-left-circle text-dark\"></i>\r\n            </a>\r\n          </Link>\r\n        </div>\r\n        <div>{data.restaurant.description}</div>\r\n        <InputGroup className=\"pt-3 pb-2\">\r\n          <InputGroupAddon addonType=\"append\"> Search </InputGroupAddon>\r\n          <Input\r\n            onChange={(e) => setQuery(e.target.value.toLocaleLowerCase())}\r\n            value={query}\r\n          />\r\n        </InputGroup>\r\n        <br></br>\r\n      </div>\r\n      <Dishes dishes={data.restaurant.dishes}></Dishes>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RestaurantPage;\r\n"]},"metadata":{},"sourceType":"module"}